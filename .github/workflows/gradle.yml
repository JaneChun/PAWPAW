# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

env:
  S3_BUCKET_NAME: animalsquad
  RESOURCE_PATH: ./server/src/main/resources-prod/application.yml

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Set yaml file
      uses: microsoft/variable-substitution@v1
      with:
        files: ${{ env.RESOURCE_PATH }}
      env:
        spring.datasource.url: jdbc:mysql://${{ secrets.ENDPOINT }}:${{ secrets.PORT }}/animalsquad?serverTimezone=Asia/Seoul
        spring.datasource.username: ${{ secrets.MYSQL_USERNAME }}
        spring.datasource.password: ${{ secrets.MYSQL_PASSWORD }}
        jwt.key: ${{ secrets.JWT_SECRET_KEY }}
        cloud.aws.credentials.access-key: ${{ secrets.S3_ACCESS_KEY }}
        cloud.aws.credentials.secret-key: ${{ secrets.S3_SECRET_KEY }}
        cloud.aws.region.static: ${{ secrets.S3_REGION }}
        cloud.aws.s3.bucket: ${{ secrets.S3_BUCKET }}


    - name: Add permission
      run: chmod +x ./server/gradlew
      shell: bash

    - name: Build with Gradle
      run: cd server; ./gradlew build -Pprofile=prod
      shell: bash

      # build한 후 프로젝트를 압축
    - name: Make zip file
      run: zip -r ./animalsquad-deploy.zip .
      shell: bash
      working-directory: ./server

      # Access Key와 Secret Access Key를 통해 권한을 확인
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

      # 압축한 프로젝트를 S3로 전송
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./animalsquad-deploy.zip s3://$S3_BUCKET_NAME/animalsquad-deploy.zip
      working-directory: ./server

      # CodeDeploy에게 배포 명령
    - name: Code Deploy
      run: >
        aws deploy create-deployment --application-name animalsquad
        --deployment-config-name CodeDeployDefault.AllAtOnce
        --deployment-group-name animalsquad-group
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=animalsquad-deploy.zip